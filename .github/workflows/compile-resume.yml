name: Compile LaTeX Resume

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  compile-latex:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Debug - Show what files changed
      run: |
        echo "Files in this commit:"
        git log --name-only --pretty=format: -1
        echo "Current working directory contents:"
        ls -la
        echo "Git status:"
        git status
    
    - name: Install LaTeX with CJK support
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra texlive-lang-chinese texlive-lang-japanese texlive-lang-korean texlive-xetex
        
    - name: Install system fonts
      run: |
        sudo apt-get install -y fonts-liberation fonts-liberation-sans fonts-liberation-serif fonts-dejavu fonts-dejavu-sans fonts-dejavu-serif
        sudo fc-cache -fv
        
    - name: Setup font mapping for Georgia
      run: |
        # Create a font mapping to replace Georgia with an available serif font
        echo 'Georgia = "Liberation Serif"' >> /tmp/fontmap.map
        echo 'Georgia = "DejaVu Serif"' >> /tmp/fontmap.map
        echo 'Georgia = "Times New Roman"' >> /tmp/fontmap.map
        
    - name: Compile LaTeX to PDF
      run: |
        # Try to compile with XeLaTeX first (for CJK support)
        if [ -f "fixed.tex" ]; then
          echo "Compiling fixed.tex with XeLaTeX..."
          xelatex -interaction=nonstopmode -fontspec="Georgia=Liberation Serif" "fixed.tex"
          xelatex -interaction=nonstopmode -fontspec="Georgia=Liberation Serif" "fixed.tex"
          echo "XeLaTeX compilation completed"
        fi
        
        # Also compile other .tex files with pdflatex as backup
        for tex_file in *.tex; do
          if [ -f "$tex_file" ] && [ "$tex_file" != "fixed.tex" ]; then
            echo "Compiling $tex_file with pdflatex..."
            pdflatex -interaction=nonstopmode "$tex_file"
            # Run twice to resolve references
            pdflatex -interaction=nonstopmode "$tex_file"
            echo "Successfully compiled $tex_file to ${tex_file%.tex}.pdf"
          fi
        done
        
    - name: Check if PDF was generated
      run: |
        if ls *.pdf 1> /dev/null 2>&1; then
          echo "PDF files generated successfully:"
          ls -la *.pdf
        else
          echo "No PDF files found!"
          exit 1
        fi
        
    - name: Commit and push PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all generated PDF files
        git add *.pdf
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-compile: Update resume PDF [skip ci]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v4
      with:
        name: resume-pdf
        path: '*.pdf'
        retention-days: 30
